{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGood","selectedGoods","length","lastGood","slice","join","document","querySelectorAll","forEach","element","includes","textContent","classList","add","remove","this","className","title","type","onClick","setState","map","good","key","event","filter","item","React","Component","ReactDOM","render","getElementById"],"mappings":"sOAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA+FaC,E,4MA3FbC,MAAQ,CACNC,aAAc,CAAC,Q,EAqBjBC,cAAgB,SAACD,GACf,OAAQA,EAAaE,QACnB,KAAK,EAAG,MAAM,oBACd,KAAK,EAAG,MAAM,GAAN,OAAUF,EAAV,gBACR,QACE,IAAMG,EAAWH,EAAaA,EAAaE,OAAS,GAEpD,MAAM,GAAN,OAAUF,EAAaI,MAAM,EAAGJ,EAAaE,OAAS,GAAGG,KAAK,MAA9D,4BACQF,EADR,mB,wDAzBN,WAAsB,IAAD,OACnBG,SAASC,iBAAiB,MAAMC,SAAQ,SAACC,GACnC,EAAKV,MAAMC,aAAaU,SAASD,EAAQE,aAC3CF,EAAQG,UAAUC,IAAI,UAEtBJ,EAAQG,UAAUE,OAAO,aAI7BR,SAASC,iBAAiB,oBAAoBC,SAAQ,SAACC,GACd,IAAnC,EAAKV,MAAMC,aAAaE,OAC1BO,EAAQG,UAAUC,IAAI,SAEtBJ,EAAQG,UAAUE,OAAO,c,oBAkB/B,WAAU,IAAD,OACCd,EAAiBe,KAAKhB,MAAtBC,aAER,OACE,yBAAKgB,UAAU,OACb,oCACE,wBAAIA,UAAU,SACXD,KAAKd,cAAcD,IAEtB,4BACEiB,MAAM,oCACNC,KAAK,SACLF,UAAU,kBACVG,QAAS,WACP,EAAKC,UAAS,iBAAO,CACnBpB,aAAc,SANpB,MAcF,wBAAIgB,UAAU,SACXnB,EAAgBwB,KAAI,SAAAC,GAAI,OACvB,yBAAKN,UAAU,iBAAiBO,IAAKD,GACnC,wBACEN,UAAS,sBAAiBM,EAAjB,YAAkC,QAATA,EAAiB,SAAW,KAE7DA,GAEH,4BACEN,UAAU,gBACVE,KAAK,SACLC,QAAS,SAACK,GACHxB,EAAaU,SAASY,GAKzB,EAAKF,UAAS,iBAAO,CACnBpB,aAAcA,EAAayB,QAAO,SAAAC,GAAI,OAAIA,IAASJ,SALrD,EAAKF,UAAS,iBAAO,CACnBpB,aAAa,GAAD,mBAAMA,GAAN,CAAoBsB,UASrCtB,EAAaU,SAASY,GAAQ,SAAW,iB,GAlFxCK,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAxB,SAASyB,eAAe,U","file":"static/js/main.5a85bd14.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  componentDidUpdate() {\n    document.querySelectorAll('li').forEach((element) => {\n      if (this.state.selectedGood.includes(element.textContent)) {\n        element.classList.add('active');\n      } else {\n        element.classList.remove('active');\n      }\n    });\n\n    document.querySelectorAll('.clearAll-button').forEach((element) => {\n      if (this.state.selectedGood.length === 0) {\n        element.classList.add('hover');\n      } else {\n        element.classList.remove('hover');\n      }\n    });\n  }\n\n  selectedGoods = (selectedGood) => {\n    switch (selectedGood.length) {\n      case 0: return `No goods selected`;\n      case 1: return `${selectedGood} is selected`;\n      default: {\n        const lastGood = selectedGood[selectedGood.length - 1];\n\n        return `${selectedGood.slice(0, selectedGood.length - 1).join(', ')} \n          and ${lastGood} are selected`;\n      }\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <>\n          <h1 className=\"title\">\n            {this.selectedGoods(selectedGood)}\n          </h1>\n          <button\n            title=\"Clear the list of selected itemss\"\n            type=\"button\"\n            className=\"clearAll-button\"\n            onClick={() => {\n              this.setState(() => ({\n                selectedGood: [],\n              }));\n            }}\n          >\n            X\n          </button>\n        </>\n\n        <ul className=\"goods\">\n          {goodsFromServer.map(good => (\n            <div className=\"goods__wrapper\" key={good}>\n              <li\n                className={`goods__item ${good} ${good === 'Jam' ? 'active' : ''}`}\n              >\n                {good}\n              </li>\n              <button\n                className=\"goods__button\"\n                type=\"button\"\n                onClick={(event) => {\n                  if (!selectedGood.includes(good)) {\n                    this.setState(() => ({\n                      selectedGood: [...selectedGood, good],\n                    }));\n                  } else {\n                    this.setState(() => ({\n                      selectedGood: selectedGood.filter(item => item !== good),\n                    }));\n                  }\n                }}\n              >\n                {selectedGood.includes(good) ? 'Remove' : 'Add'}\n              </button>\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}